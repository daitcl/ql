name: Check Base Image Updates

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 时间 00:00 检查
  workflow_dispatch:      # 支持手动触发

jobs:
  check-update:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Get current digest from registry
        id: get-digest
        run: |
          # 获取 GHCR token
          TOKEN=$(curl -s "https://ghcr.io/token?scope=repository:whyour/qinglong:pull&service=ghcr.io" | jq -r .token)
          
          # 获取镜像 manifest 并计算 digest
          DIGEST=$(curl -s \
            -H "Authorization: Bearer $TOKEN" \
            -H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
            "https://ghcr.io/v2/whyour/qinglong/manifests/debian" | shasum -a 256 | cut -d ' ' -f1)
          
          echo "DIGEST=$DIGEST" >> $GITHUB_OUTPUT

      - name: Check current version.txt
        id: check_versions
        run: |
          # 检查 version.txt 是否存在并读取当前 digest
          if [ -f "version.txt" ]; then
            CURRENT_DIGEST=$(grep -oP 'digest=\s*\K[^ ]+' version.txt || echo "")
          else
            CURRENT_DIGEST=""
          fi
          
          echo "Current digest in version.txt: $CURRENT_DIGEST"
          echo "Latest digest from registry: ${{ steps.get-digest.outputs.DIGEST }}"
          
          # 设置输出变量
          if [ "$CURRENT_DIGEST" = "${{ steps.get-digest.outputs.DIGEST }}" ]; then
            echo "needs_update=false" >> $GITHUB_OUTPUT
            echo "Digest unchanged. No update needed."
          else
            echo "needs_update=true" >> $GITHUB_OUTPUT
            echo "New digest detected. Update required."
          fi

      - name: Update version.txt file
        if: ${{ steps.check_versions.outputs.needs_update == 'true' }}
        run: |
          echo "Updating version.txt with new digest:"
          echo "digest=${{ steps.get-digest.outputs.DIGEST }}" > version.txt
          
          # 显示更新后的内容
          cat version.txt

      - name: Commit and push changes
        id: commit-step
        if: ${{ steps.check_versions.outputs.needs_update == 'true' }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add version.txt
          git commit -m "chore: update base image digest to ${{ steps.get-digest.outputs.DIGEST }}"
          
          # 尝试推送，如果失败则重试（处理并发更新冲突）
          n=0
          max_retries=3
          delay=5
          until [ $n -ge $max_retries ]
          do
            git pull --rebase && git push && break
            n=$((n+1))
            echo "Push attempt $n failed, retrying in ${delay}s..."
            sleep $delay
          done
          
          if [ $n -eq $max_retries ]; then
            echo "::warning::Failed to push changes after $max_retries attempts"
            exit 1
          fi
          
          # 设置输出标记，表示已提交更改
          echo "changes_committed=true" >> $GITHUB_OUTPUT

      - name: Trigger Build workflow
        if: ${{ steps.commit-step.outputs.changes_committed == 'true' }}
        uses: actions/github-script@v7
        with:
          script: |
            try {
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'build-push.yml',
                ref: 'main',
              });
              console.log('Build workflow triggered successfully.');
            } catch (error) {
              console.error('Failed to trigger Build workflow:', error);
              // 不标记为失败，因为主要工作已完成
            }

      - name: Skip update if digest unchanged
        if: ${{ steps.check_versions.outputs.needs_update == 'false' }}
        run: |
          echo "Skipping update:"
          echo "Current digest already matches latest"
          echo "Digest: ${{ steps.get-digest.outputs.DIGEST }}"